{"version":3,"sources":["logo.svg","Components/UserImage.js","Components/UserName.js","Components/CommunityName.js","Components/ProgressIndeterminate.js","Components/ErrorAlert.js","Components/Pagination.js","Components/PostList.js","Components/PlusOneList.js","Components/CommentList.js","Components/MediaList.js","Components/Album.js","Components/LinkItem.js","Components/Poll.js","Components/Post.js","Components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","UserImage","_this$props$user","this","props","user","profilePageUrl","avatarImageUrl","displayName","react_default","a","createElement","className","href","src","alt","width","height","style","borderRadius","React","Component","UserName","CommunityName","_this$props$community","community","resourceName","concat","ProgressIndeterminate","role","aria-valuenow","aria-valuemin","aria-valuemax","ErrorAlert","_this$props","_this$props$error","error","_this$props$canClose","canClose","_ref","heading","message","onClick","clearError","type","data-dismiss","aria-label","aria-hidden","response","messages","text","body","JSON","parse","status","statusText","Pagination","page","total","per_page","hrefBuilder","onPageChange","currentPage","previousPage","nextPage","lastPage","Math","ceil","firstItemNumber","lastItemNumber","min","itemCount","itemPlurality","firstPageItemClass","previousPageItemClass","nextPageItemClass","NavLink","to","title","toLocaleString","PostList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","event","preventDefault","search","state","location","url","getPagedSearchQueryString","pathname","history","push","performSearch","handlePageChange","asyncToGenerator","regenerator_default","mark","_callee","pageData","_this$state","newPage","wrap","_context","prev","next","selected","abrupt","window","scrollTo","stop","_x","apply","arguments","buildPageHref","index","isFetching","isUpdating","setState","basename","settingsJson","fetch","ok","getResponseError","_context2","t3","json","query","URLSearchParams","get","parseInt","prevProps","prevLocation","prevIsFetching","prevQuery","prevSearch","prevPage","toString","_this$state$index","_ref2$posts","posts","searchLower","toLowerCase","matchingPostCount","forEach","post","hidden","content","includes","_this2","_this$state2","_this$state2$index","_ref3$posts","_ref4$length","length","Components_Pagination","_this3","_this$state3","_this$state3$index","_this$state3$search","_this$state3$page","_this$state3$per_page","_ref5$posts","sort","firstBy","renderedPostCount","skippedPostCount","postsToSkip","postItems","map","createdAt","Date","creationTime","id","author","postAcl","media","album","link","poll","resharedPost","_ref6$communityAcl","communityAcl","key","Components_UserImage","Components_UserName","react","Components_CommunityName","Link","dangerouslySetInnerHTML","__html","textDecoration","renderMediaPreview","renderAlbumPreview","renderLinkPreview","onSubmit","placeholder","value","onChange","e","target","Components_ProgressIndeterminate","Components_ErrorAlert","renderPagination","params","strings","keys","filter","encodeURIComponent","join","string","getQueryString","postUrl","_media$url","startsWith","mediaId","substring","description","contentType","mediaItems","item","linkItem","imageUrl","withRouter","PlusOneList","plusOnes","plusOne","plusOner","CommentList","comments","hash","comment","created","mediaItem","border","isSelected","MediaList","frameBorder","allow","allowFullScreen","Album","_this$props$album","LinkItem","Poll","_this$props$poll","choices","_ref$totalVotes","totalVotes","choice","voteCount","_choice$votes","votes","v1","v2","voter","localeCompare","percent","data-toggle","aria-expanded","aria-controls","toFixed","vote","Post","match","getIndex","find","date","t0","_this$state$post","_this$state$isFetchin","_this$state$error","_ref$creationTime","_ref$author","_ref$content","_ref$link","_ref$album","_ref$postAcl","_ref$comments","_ref$plusOnes","_ref2$communityAcl","creationDate","Components_MediaList","Components_LinkItem","Components_Album","Components_Poll","Components_CommentList","Components_PlusOneList","About","App","BrowserRouter","paddingTop","paddingBottom","logo","data-target","Switch","Route","exact","path","component","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wUCgBzBC,mLAbJ,IAAAC,EACeC,KAAKC,MAAnBC,YADD,IAAAH,EACQ,GADRA,EAECI,EAAgDD,EAAhDC,eAAgBC,EAAgCF,EAAhCE,eAAgBC,EAAgBH,EAAhBG,YAExC,OACEC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,OAAOC,KAAMP,GACxBG,EAAAC,EAAAC,cAAA,OAAKG,IAAKP,EAAgBQ,IAAKP,EAAaQ,MAAM,KAAKC,OAAO,KACzDC,MAAO,CAAEC,aAAc,iBARZC,IAAMC,WCWfC,mLAVJ,IAAApB,EACeC,KAAKC,MAAnBC,YADD,IAAAH,EACQ,GADRA,EAECI,EAAgCD,EAAhCC,eAAgBE,EAAgBH,EAAhBG,YAExB,OACEC,EAAAC,EAAAC,cAAA,KAAGE,KAAMP,EAAgBM,UAAU,kBAAkBJ,UANpCY,IAAMC,WCWdE,mLAVJ,IAAAC,EACoBrB,KAAKC,MAAxBqB,iBADD,IAAAD,EACa,GADbA,EAECE,EAA8BD,EAA9BC,aAAclB,EAAgBiB,EAAhBjB,YAEtB,OACEC,EAAAC,EAAAC,cAAA,KAAGE,KAAI,2BAAAc,OAA6BD,GAAgBd,UAAU,kBAAkBJ,UAN1DY,IAAMC,WCWnBO,mLATX,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0DAA0DiB,KAAK,cACzEC,gBAAc,MAAMC,gBAAc,IAAIC,gBAAc,MAAMd,MAAO,CAAEF,MAAO,kBALnDI,IAAMC,WC+E3BY,mLAtBJ,IAAAC,EACiC/B,KAAKC,MADtC+B,EAAAD,EACCE,aADD,IAAAD,EACS,GADTA,EAAAE,EAAAH,EACaI,gBADb,IAAAD,KAAAE,EAEsBH,GAAS,GAA9BI,EAFDD,EAECC,QAASC,EAFVF,EAEUE,QAEjB,OAAKD,GAAYC,EAIfhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDAAiDiB,KAAK,SAClEW,EAAW/B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAiB4B,GAAiB,KAC5D/B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAQ6B,GACpBH,GACC7B,EAAAC,EAAAC,cAAA,UAAQ+B,QAASvC,KAAKC,MAAMuC,WAAYC,KAAK,SAAShC,UAAU,QAAQiC,eAAa,QAC7EC,aAAW,SACjBrC,EAAAC,EAAAC,cAAA,QAAMoC,cAAY,QAAlB,UATC,wFA5DmBC,oFACvBA,2CACI,oBAELP,EAAU,KACVQ,EAAW,uBAGMD,EAASE,eAAtBA,aAEEC,EAAOC,KAAKC,MAAMH,KACZC,EAAKV,UACfA,EAAUU,EAAKV,SAGbU,GAAQA,EAAKF,WACfA,EAAWE,EAAKF,wEAQlBT,EAAU,KAEU,MAApBQ,EAASM,QAAmBb,IAAWQ,0BACzCT,EAAO,GAAAb,OAAMqB,EAASM,OAAf,KAAA3B,OAAyBqB,EAASO,8BAClC,CACLP,SAAUA,EACVR,QAASA,EACTC,QAAS,KACTQ,SAAUA,mBAIVD,GAAYA,EAASM,QAAUN,EAASO,aAC1Cf,EAAO,GAAAb,OAAMqB,EAASM,OAAf,KAAA3B,OAAyBqB,EAASO,aAGtCd,IACHA,EAAO,GAAAd,OAAMqB,EAASM,OAAf,KAAA3B,OAAyBqB,EAASO,aAGvCf,IAAYC,IACdD,EAAU,wBAEL,CACLQ,SAAUA,EACVR,QAASA,EACTC,QAASA,EACTQ,SAAUA,wHArDS5B,6BCkFVmC,mLA/EJ,IAAAtB,EACsD/B,KAAKC,MAA1DqD,EADDvB,EACCuB,KAAMC,EADPxB,EACOwB,MAAOC,EADdzB,EACcyB,SAAUC,EADxB1B,EACwB0B,YAAaC,EADrC3B,EACqC2B,aAE5C,IAAKH,GAASA,EAAQ,EACpB,OAAO,KAET,IAAII,EAAcL,GAAc,EAE1BM,EAAeD,EAAc,EAC7BE,EAAWF,EAAc,EACzBG,EAAWC,KAAKC,KAAKT,EAAQC,GAE7BS,GAAmBN,EAAc,GAAKH,EAAW,EACjDU,EAAiBH,KAAKI,IAAIR,EAAcH,EAAUD,GAElDa,EAAYF,EAAiB,EAAID,EAEjCI,EAA8B,IAAdD,EAAkB,GAAK,IAE7C,GAAiB,IAAbN,EACF,OACExD,EAAAC,EAAAC,cAAA,OAAKmC,aAAW,mBACdrC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,QACEC,UAAU,aAAa2D,EADzB,QACyCC,MAOnD,IAAMC,EAAqBX,EAAc,EAAI,YAAc,qBACrDY,EAAwBZ,EAAc,EAAI,YAAc,qBACxDa,EAAoBb,EAAcH,EAAWD,EAAQ,YAAc,qBAEzE,OACEjD,EAAAC,EAAAC,cAAA,OAAKmC,aAAW,mBACdrC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAW6D,GACbhE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAShE,UAAU,YAAYiE,GAAIjB,EAAY,GACtClB,QAAS,kBAAMmB,EAAa,IAAIiB,MAAM,cAC7CrE,EAAAC,EAAAC,cAAA,KAAGmE,MAAM,aAAalE,UAAU,2BAGpCH,EAAAC,EAAAC,cAAA,MAAIC,UAAW8D,GACbjE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAShE,UAAU,YAAYiE,GAAIjB,EAAYG,GACtCrB,QAAS,kBAAMmB,EAAaE,IAAee,MAAM,iBACxDrE,EAAAC,EAAAC,cAAA,KAAGmE,MAAM,eAAelE,UAAU,0BAGtCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,QAAkCkD,EAAlC,OAAmDG,EAASc,mBAE9DtE,EAAAC,EAAAC,cAAA,MAAIC,UAAW+D,GACblE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAShE,UAAU,YAAYiE,GAAIjB,EAAYI,GACtCtB,QAAS,kBAAMmB,EAAaG,IAAWc,MAAM,aACpDrE,EAAAC,EAAAC,cAAA,KAAGmE,MAAM,YAAYlE,UAAU,2BAGnCH,EAAAC,EAAAC,cAAA,MAAIC,UAAW+D,GACblE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAShE,UAAU,YAAYiE,GAAIjB,EAAYK,GACtCvB,QAAS,kBAAMmB,EAAaI,IAAWa,MAAM,aACpDrE,EAAAC,EAAAC,cAAA,KAAGmE,MAAM,YAAYlE,UAAU,2BAIrCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,WACW2D,EADX,QAC2BC,EAD3B,KAC4CJ,EAAgBW,iBAD5D,MACiFV,EAAeU,iBADhG,OACsHrB,EAAMqB,iBAD5H,qBAvEa1D,aCUnB2D,cACJ,SAAAA,EAAY5E,GAAO,IAAA6E,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/E,KAAA6E,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAA/E,KAAA+E,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAnF,KAAMC,KA2JRmF,aAAe,SAACC,GACdA,EAAMC,iBADkB,IAGhBC,EAAWT,EAAKU,MAAhBD,OAEAE,EAAaX,EAAK7E,MAAlBwF,SAEFC,EAAM,IAAMb,EAASc,0BAA0BJ,GAEjDG,IAAQD,EAASG,SAAWH,EAASF,OAEvCT,EAAK7E,MAAM4F,QAAQC,KAAKJ,GAExBZ,EAAKiB,cAAcR,IAzKJT,EA6KnBkB,iBA7KmB,eAAA5D,EAAA2C,OAAAkB,EAAA,EAAAlB,CAAAmB,EAAA3F,EAAA4F,KA6KA,SAAAC,EAAOC,GAAP,IAAAC,EAAAf,EAAAjC,EAAAiD,EAAAb,EAAA,OAAAQ,EAAA3F,EAAAiG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAL,EACQxB,EAAKU,MAAtBD,EADSe,EACTf,OAAQjC,EADCgD,EACDhD,KAEViD,EAAUF,EAASO,SAAW,EAEhCtD,IAASiD,EALI,CAAAE,EAAAE,KAAA,eAAAF,EAAAI,OAAA,iBAQXnB,EAAM,IAAMb,EAASc,0BAA0BJ,EAAQgB,GAG7DzB,EAAK7E,MAAM4F,QAAQC,KAAKJ,GAExBoB,OAAOC,SAAS,EAAG,GAbF,wBAAAN,EAAAO,SAAAZ,EAAApG,SA7KA,gBAAAiH,GAAA,OAAA7E,EAAA8E,MAAAlH,KAAAmH,YAAA,GAAArC,EAyTnBsC,cAAgB,SAAC9D,GAAS,IAChBiC,EAAWT,EAAKU,MAAhBD,OAER,MAAO,IAAMV,EAASc,0BAA0BJ,EAAQjC,IAzTxDwB,EAAKU,MAAQ,CACX6B,MAAO,KACP9B,OAAQ,GACR+B,YAAY,EACZrF,MAAO,KACPuB,SAAU,GACVF,KAAM,GAGRwB,EAAKyC,YAAa,EAZDzC,sNAgBjB9E,KAAKwH,SAAS,CAAEvF,MAAO,KAAMqF,YAAY,IAErC5B,sBAIa,MAFX+B,EAAWC,EAAaD,YAG5B/B,EAAG,IAAAlE,OAAOiG,EAAP,KAAAjG,OAAmBkE,IAEpB7C,EAAW,uBAGI8E,MAAMjC,cAAvB7C,UAEc+E,gCACZ5H,eACe8B,EAAW+F,iBAAiBhF,oCAAzCZ,WACAqF,YAAY,QAFTE,6GASPxH,KAAKwH,SAAS,CACZvF,MAAK6F,EAAAC,GACLT,YAAY,gDAKIzE,EAASmF,eAAvBX,SAEE5B,EAAazF,KAAKC,MAAlBwF,SAEFwC,EAAQ,IAAIC,gBAAgBzC,EAASF,QACrCA,EAAS0C,EAAME,IAAI,UACnB7E,EAAO8E,SAASH,EAAME,IAAI,QAAS,IAEzCnI,KAAKwH,SAAS,CAAEH,MAAOA,EAAO9B,OAAQA,GAAU,GAAIjC,KAAMA,EAAMgE,YAAY,EAAOrF,MAAO,OAE1FjC,KAAK+F,cAAcR,EAAQjC,kMAGJ+E,iGACnBrI,KAAKuH,4DAKTvH,KAAKuH,YAAa,EAElB,IACoBe,EAA6CD,EAAvD5C,SAAoC8C,EAAmBF,EAA/Bf,WAC1BkB,EAAY,IAAIN,gBAAgBI,EAAa/C,QAC7CkD,EAAaD,EAAUL,IAAI,UAEjCO,GADIA,EAAWF,EAAUL,IAAI,SACPC,SAASM,EAAU,IAAM,KAL7C3G,EAO+B/B,KAAKC,MAA9BwF,EAPN1D,EAOM0D,SAAU6B,EAPhBvF,EAOgBuF,WACZW,EAAQ,IAAIC,gBAAgBzC,EAASF,QACrCA,EAAS0C,EAAME,IAAI,UAEzB7E,GADIA,EAAO2E,EAAME,IAAI,SACPC,SAAS9E,EAAM,IAAM,KAG/BgE,IAAeiB,GACjBvI,KAAKwH,SAAS,CAAEF,WAAYA,IAG1B/B,IAAWkD,GAAcnF,IAASoF,GAAYF,EAAUG,aAAeV,EAAMU,YAC/E3I,KAAK+F,cAAcR,EAAQjC,GAnB/B,QAuBEtD,KAAKuH,YAAa,2IAIRhC,EAAQjC,GAAM,IAAAsF,EACH5I,KAAKwF,MAApB6B,aADkB,IAAAuB,EACV,GADUA,EAAAC,GAEHxB,GAAS,IAAxByB,aAFkB,IAAAD,EAEV,GAFUA,EAMtBE,EAAcxD,GAAUA,EAAOyD,cAI/BC,EAAoB,EAExBH,EAAMI,QAAQ,SAACC,GACbA,EAAKC,OAAS7D,KAAY4D,EAAKE,UAAYF,EAAKE,QAAQL,cAAcM,SAASP,IAE1EI,EAAKC,QACRH,MAKJjJ,KAAKwH,SAAS,CACZH,MAAOA,EACP9B,OAAQA,GAAU,GAClBjC,KAAMA,EACN2F,kBAAmBA,EACnB3B,YAAY,EACZrF,MAAO,kDAqMQ,IAAAsH,EAAAvJ,KAAAwJ,EAC+BxJ,KAAKwF,MADpCiE,EAAAD,EACTnC,aADS,IAAAoC,EACD,GADCA,EACGnG,EADHkG,EACGlG,KAAM2F,EADTO,EACSP,kBADTS,GAEMrC,GAAS,IAAxByB,MAFSa,SAAA,IAAAD,EAED,GAFCA,IAGe,IAAxBE,OAER,YALiB,IAAAD,EAGA,EAHAA,GAKJ,EAAU,KAGrBrJ,EAAAC,EAAAC,cAACqJ,EAAD,CAAYvG,KAAMA,EAAMC,MAAO0F,EAAmBzF,SAAU,GAChDC,YAAazD,KAAKoH,cAClB1D,aAAc,SAACJ,GAAD,OAAUiG,EAAKvD,iBAAiB1C,uCAIrD,IAAAwG,EAAA9J,KAAA+J,EACyE/J,KAAKwF,MAD9EwE,EAAAD,EACC1C,aADD,IAAA2C,EACS,GADTA,EAAAC,EAAAF,EACaxE,cADb,IAAA0E,EACsB,GADtBA,EAC0B3C,EAD1ByC,EAC0BzC,WAAYrF,EADtC8H,EACsC9H,MADtCiI,EAAAH,EAC6CzG,YAD7C,IAAA4G,EACoD,EADpDA,EAAAC,EAAAJ,EACuDvG,gBADvD,IAAA2G,EACkE,GADlEA,EAAAC,GAEgB/C,GAAS,IAAxByB,aAFD,IAAAsB,EAES,GAFTA,EAIPtB,EAAMuB,KAAKC,kBAAQ,gBAAiB,IAEpC,IAAIC,EAAoB,EACpBC,EAAmB,EACnBC,GAAenH,EAAO,GAAKE,EAI3BkH,EAAY5B,EAAM6B,IAAI,SAACxB,GACzB,GAAIA,EAAKC,OACP,OAAO,KAET,GAAImB,GAAqB/G,EACvB,OAAO,KAET,GAAIgH,EAAmBC,EAErB,OADAD,IACO,KAGTD,IAEA,IAAMK,EAAY,IAAIC,KAAK1B,EAAK2B,cAC1BpF,EAAG,UAAAlE,OAAa2H,EAAK4B,IAEnBC,EAA4D7B,EAA5D6B,OAAQC,EAAoD9B,EAApD8B,QAASC,EAA2C/B,EAA3C+B,MAAOC,EAAoChC,EAApCgC,MAAOC,EAA6BjC,EAA7BiC,KAAMC,EAAuBlC,EAAvBkC,KAAMC,EAAiBnC,EAAjBmC,aAjBjBC,GAmBJN,GAAW,IAAjCO,aACAlK,SApB0B,IAAAiK,EAmBX,GAnBWA,IAoBI,IAA9BjK,UAEJqD,EAAQwE,EAAKxE,MAcjB,OAZI2G,IACGnC,EAAK+B,QACR/B,EAAK+B,MAAQI,EAAaJ,QAI1B/B,EAAKE,UACP1E,EAAQwE,EAAKE,SAMb/I,EAAAC,EAAAC,cAAA,OAAKiL,IAAK/F,EAAKjF,UAAU,aACvBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAACkL,EAAD,CAAWxL,KAAM8K,IACjB1K,EAAAC,EAAAC,cAACmL,EAAD,CAAUzL,KAAM8K,IACf1J,GAAaA,EAAUjB,aACtBC,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BACbH,EAAAC,EAAAC,cAACqL,EAAD,CAAevK,UAAWA,KAG9BhB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kCACfH,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAMpH,GAAIgB,EAAKjF,UAAU,kBAAkBmK,EAAUhG,oBAGxD0G,GACChL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aACXH,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAMpH,GAAIgB,GAAV,wBACwB4F,EAAaN,OAAO3K,cAIhDC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aACXH,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAMpH,GAAIgB,EAAKjF,UAAU,YAAYsL,wBAAyB,CAAEC,OAAQrH,GAClE5D,MAAO,CAAEkL,eAAgB,WAEhCf,GAASrG,EAASqH,mBAAmBhB,EAAOxF,GAC5CyF,GAAStG,EAASsH,mBAAmBhB,EAAOzF,GAC5C0F,GAAQvG,EAASuH,kBAAkBhB,EAAM1F,GACzC2F,GACC/K,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aACXH,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAMpH,GAAIgB,GAAV,kBAQZ,OACEpF,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmB4L,SAAUrM,KAAKoF,cAChD9E,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uBAAuBgC,KAAK,SAAS6J,YAAY,SAAS3J,aAAW,SAC/E4J,MAAOhH,EACPiH,SAAU,SAACC,GAAD,OAAO3C,EAAKtC,SAAS,CAAEjC,OAAQkH,EAAEC,OAAOH,WACzDjM,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAA+BgC,KAAK,UAAtD,WAGD6E,GACChH,EAAAC,EAAAC,cAACmM,EAAD,MAGFrM,EAAAC,EAAAC,cAACoM,EAAD,CAAY3K,MAAOA,EAAOE,UAAU,IAEnCuI,EAEA1K,KAAK6M,6DAxTUC,GACpB,IAAIC,EAAUhI,OAAOiI,KAAKF,GACvBG,OAAO,SAAAxB,GACN,OAAOA,GAAOqB,EAAOrB,IAAwB,KAAhBqB,EAAOrB,KAErCd,IAAI,SAAAc,GACH,IAAIc,EAAQO,EAAOrB,GACnB,OAAKc,GAAmB,KAAVA,EAEP,CAACd,EAAKqB,EAAOrB,IAAMd,IAAIuC,oBAAoBC,KAAK,KAD9C,OAITC,EAAS,GAKb,OAHIL,GAAWA,EAAQnD,OAAS,IAC9BwD,EAAS,IAAML,EAAQI,KAAK,MAEvBC,oDAGwB7H,EAAQjC,GAGvC,OAFIA,EAAO,IAAGA,EAAO,MAEduB,EAASwI,eACd,CACE9H,OAAQA,EACRjC,KAAMA,+CAqCc4H,EAAOoC,GAAS,IAAAC,EACnBrC,EAAbxF,WADgC,IAAA6H,EAC1B,GAD0BA,EAGxC,IAAK7H,EACH,OAAO,KAET,GAAIA,EAAI8H,WAAW,mCAAyC,CAC1D,IAAMC,EAAU/H,EAAIgI,UAAU,GAAI,IAClC,OACEpN,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,KAAGE,KAAM4M,GACPhN,EAAAC,EAAAC,cAAA,OAAKG,IAAG,8BAAAa,OAAgCiM,EAAhC,UAAiD7M,IAAKsK,EAAMyC,YAAa7M,OAAO,SAE1FR,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGE,KAAM4M,EAAS7M,UAAU,QAC1BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBADf,aAKC,GAAIiF,EAAI8H,WAAW,oCAA0C,CAClE,IAAMC,EAAU/H,EAAIgI,UAAU,GAAI,IAClC,OACEpN,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,KAAGE,KAAM4M,GACPhN,EAAAC,EAAAC,cAAA,OAAKG,IAAG,8BAAAa,OAAgCiM,EAAhC,UAAiD7M,IAAKsK,EAAMyC,YAAa7M,OAAO,SAE1FR,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGE,KAAM4M,EAAS7M,UAAU,QAC1BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBADf,aAKC,OAAIiF,EAAI8H,WAAW,2BAEtBlN,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,KAAGE,KAAM4M,EAAS7M,UAAU,QAC1BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBADf,gBAK2B,YAAtByK,EAAM0C,aAAoC,MAAPlI,EAE1CpF,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,KAAGE,KAAM4M,EAAS7M,UAAU,QAC1BH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBADf,gBAK2B,YAAtByK,EAAM0C,aAAoC,MAAPlI,EAE1CpF,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,KAAGE,KAAM4M,GACPhN,EAAAC,EAAAC,cAAA,OAAKG,IAAK+E,EAAK9E,IAAKsK,EAAMyC,YAAa7M,OAAO,UAM/C,gDAGiBqK,EAAOmC,GAC/B,IAAKnC,EACH,OAAO,KAF+B,IAIhCD,EAAUC,EAAVD,MAER,IAAKA,EACH,OAAO,KAET,IAAM2C,EAAa3C,EAAMP,IAAI,SAACmD,GAC5B,MAAyB,YAArBA,EAAKF,aAA6BE,EAAKpI,IAEvCpF,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,KAAGE,KAAM4M,GAAShN,EAAAC,EAAAC,cAAA,OAAKG,IAAKmN,EAAKpI,IAAK5E,OAAO,MAAMF,IAAI,YAI/B,YAArBkN,EAAKF,aAA6BE,EAAKpI,IAE5CpF,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,KAAGE,KAAM4M,GACPhN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBADf,WAOC,OAGT,OACEH,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACGiC,EAAW,GACXA,EAAWjE,OAAS,GACnBtJ,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGE,KAAM4M,GAAT,QAAwBO,EAAWjE,OAAS,EAA5C,aAAyDiE,EAAWjE,OAAS,EAAI,IAAM,gDAOxEwB,EAAMkC,GAC7B,IAAIS,EAAW,KAgBf,OAfI3C,EAAKzG,QACPoJ,EACEzN,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,KAAGE,KAAM0K,EAAK1F,KAAM0F,EAAKzG,OACxByG,EAAK4C,UACJ1N,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGE,KAAM4M,GACPhN,EAAAC,EAAAC,cAAA,OAAKG,IAAKyK,EAAK4C,SAAUpN,IAAKwK,EAAKzG,MAAO7D,OAAO,YAOtDiN,SAvTY7M,aA8bR+M,cAAWpJ,GCtaXqJ,mLA/BJ,IACCC,EAAanO,KAAKC,MAAlBkO,SAER,OAAKA,GAAYA,EAASvE,OAAS,EAE/BtJ,EAAAC,EAAAC,cAACoL,EAAA,SAAD,MAIFtL,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WACLF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACX0N,EAASxD,IAAI,SAACyD,EAAS/G,GAAU,IACxBgH,EAAaD,EAAbC,SAER,OACE/N,EAAAC,EAAAC,cAAA,MAAIiL,IAAKpE,GACP/G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACkL,EAAD,CAAWxL,KAAMmO,IACjB/N,EAAAC,EAAAC,cAACmL,EAAD,CAAUzL,KAAMmO,iBArBRnN,aCCpBoN,mLACK,IACCC,EAAavO,KAAKC,MAAlBsO,SAER,IAAKA,GAAYA,EAAS3E,OAAS,EACjC,OACEtJ,EAAAC,EAAAC,cAACoL,EAAA,SAAD,MAGJ,IAAM4C,EAAOxO,KAAKC,MAAMwF,SAAS+I,KAEjC,OACElO,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,YACAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACX8N,EAAS5D,IAAI,SAAC8D,EAASpH,GAAU,IACxB2D,EAA+CyD,EAA/CzD,OAAQF,EAAuC2D,EAAvC3D,aAAczB,EAAyBoF,EAAzBpF,QAAS6B,EAAgBuD,EAAhBvD,MAAOE,EAASqD,EAATrD,KACxCsD,EAAU,IAAI7D,KAAKC,GAErB6D,EAAY,KACZzD,GAASA,EAAMxF,KAA6B,YAAtBwF,EAAM0C,cAC9Be,EACErO,EAAAC,EAAAC,cAAA,KAAGE,KAAMwK,EAAMxF,KACbpF,EAAAC,EAAAC,cAAA,OAAKG,IAAKuK,EAAMxF,IAAK9E,IAAI,GAAGE,OAAO,UAKzC,IAAIiN,EAAW,KACX3C,GAAQA,EAAK1F,MACX0F,EAAK4C,SACPD,EACEzN,EAAAC,EAAAC,cAAA,KAAGE,KAAM0K,EAAK1F,KACZpF,EAAAC,EAAAC,cAAA,OAAKG,IAAKyK,EAAK4C,SAAUpN,IAAKwK,EAAKzG,MAAO7D,OAAO,KAAKL,UAAU,SAC/D2K,EAAKzG,OAIHyG,EAAKzG,QACZoJ,EACEzN,EAAAC,EAAAC,cAAA,KAAGE,KAAM0K,EAAK1F,KAAM0F,EAAKzG,SAK/B,IAAMoG,EAAE,WAAAvJ,OAAc6F,GAElB5G,EAAY,iBACZmO,EAAS,KAEPC,EAAaL,IAAS,IAAMzD,EAOlC,OALI8D,IACFpO,GAAa,YACbmO,EAAS,aAITtO,EAAAC,EAAAC,cAAA,MAAIiL,IAAKpE,EAAO0D,GAAIA,EAAItK,UAAWA,EAAWM,MAAO,CAAE6N,OAAQA,EAAQ5N,aAAc,SACnFV,EAAAC,EAAAC,cAACkL,EAAD,CAAWxL,KAAM8K,IACjB1K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACZH,EAAAC,EAAAC,cAACmL,EAAD,CAAUzL,KAAM8K,IAChB1K,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kCACfH,EAAAC,EAAAC,cAAA,KAAGE,KAAI,IAAAc,OAAMuJ,GAAMtK,UAAU,kBAAkBiO,EAAQ9J,mBAExDiK,GACCvO,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAGhBgO,EAAQpF,SACP/I,EAAAC,EAAAC,cAAA,OAAKuL,wBAAyB,CAAEC,OAAQ3C,KAEzCsF,EACAZ,eA5EO7M,aAuFX+M,cAAWK,GC5BXQ,mLA7DJ,IACC5D,EAAUlL,KAAKC,MAAfiL,MAER,IAAKA,EACH,OACE5K,EAAAC,EAAAC,cAACoL,EAAA,SAAD,MALG,IAQClG,EAAQwF,EAARxF,IAER,IAAKA,EACH,OACEpF,EAAAC,EAAAC,cAACoL,EAAA,SAAD,MAGJ,GAAIlG,EAAI8H,WAAW,mCAAyC,CAC1D,IAAMC,EAAU/H,EAAIgI,UAAU,GAAI,IAClC,OACEpN,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,UAAQK,MAAM,MAAMC,OAAO,MAAM6D,MAAOuG,EAAMyC,YAAahN,IAAG,gCAAAa,OAAkCiM,GACxFsB,YAAY,IAAIC,MAAM,4BAA4BC,iBAAiB,IAC3E3O,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGE,KAAMgF,EAAKjF,UAAU,QACtBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBADf,WAKC,GAAIiF,EAAI8H,WAAW,oCAA0C,CAClE,IAAMC,EAAU/H,EAAIgI,UAAU,GAAI,IAClC,OACEpN,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,UAAQK,MAAM,MAAMC,OAAO,MAAM6D,MAAOuG,EAAMyC,YAAahN,IAAG,iCAAAa,OAAmCiM,GACzFsB,YAAY,IAAIC,MAAM,4BAA4BC,iBAAiB,IAC3E3O,EAAAC,EAAAC,cAAA,KAAGE,KAAMgF,EAAKjF,UAAU,QACtBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBADf,WAKC,MAA0B,YAAtByK,EAAM0C,aAAoC,MAAPlI,EAE1CpF,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGE,KAAMgF,EAAKjF,UAAU,QACtBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBADf,WAK2B,YAAtByK,EAAM0C,aAAoC,MAAPlI,EAE1CpF,EAAAC,EAAAC,cAAA,KAAGE,KAAMgF,GACPpF,EAAAC,EAAAC,cAAA,OAAKG,IAAK+E,EAAK9E,IAAKsK,EAAMyC,YAAa7M,OAAO,SAMlDR,EAAAC,EAAAC,cAACoL,EAAA,SAAD,aAzDkB1K,aCiCTgO,mLAhCJ,IAAAC,EACgBnP,KAAKC,MAApBkL,MACAD,QAFD,IAAAiE,EACS,GADTA,GAECjE,MAER,OAAKA,EAKEA,EAAMP,IAAI,SAACmD,GAChB,MAAyB,YAArBA,EAAKF,aAA6BE,EAAKpI,IAEvCpF,EAAAC,EAAAC,cAAA,OAAKiL,IAAKqC,EAAKpI,IAAKjF,UAAU,QAC5BH,EAAAC,EAAAC,cAAA,KAAGE,KAAMoN,EAAKpI,KAAKpF,EAAAC,EAAAC,cAAA,OAAKG,IAAKmN,EAAKpI,IAAK5E,OAAO,MAAMF,IAAI,YAIhC,YAArBkN,EAAKF,aAA6BE,EAAKpI,IAE5CpF,EAAAC,EAAAC,cAAA,OAAKiL,IAAKqC,EAAKpI,IAAKjF,UAAU,QAC5BH,EAAAC,EAAAC,cAAA,KAAGE,KAAMoN,EAAKpI,KACZpF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBADf,WAOC,OArBLH,EAAAC,EAAAC,cAACoL,EAAA,SAAD,aAPY1K,aCyBLkO,mLAxBJ,IACChE,EAASpL,KAAKC,MAAdmL,KAER,OAAKA,GAASA,EAAK1F,IAMjBpF,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGE,KAAM0K,EAAK1F,KAAM0F,EAAKzG,QAE1ByG,EAAK4C,UACJ1N,EAAAC,EAAAC,cAAA,KAAGE,KAAM0K,EAAK1F,KACZpF,EAAAC,EAAAC,cAAA,OAAKG,IAAKyK,EAAK4C,SAAUpN,IAAKwK,EAAKzG,MAAO7D,OAAO,UAXrDR,EAAAC,EAAAC,cAACoL,EAAA,SAAD,aANe1K,aCsERmO,mLAlEJ,IAAAC,EACetP,KAAKC,MAAnBoL,KADDjJ,QAAA,IAAAkN,EACQ,GADRA,IAEqC,GAApCC,EAFDnN,EAECmN,QAFDC,EAAApN,EAEUqN,kBAFV,IAAAD,EAEuB,EAFvBA,EAIP,OAAKD,EAMHjP,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQgP,EAAW7K,iBAAlC,UAA0DtE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,+BAE1DH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACX8O,EAAQ5E,IAAI,SAAC+E,EAAQrI,GAAU,IACtBsI,EAAiDD,EAAjDC,UAAW3B,EAAsC0B,EAAtC1B,SAAUL,EAA4B+B,EAA5B/B,YADCiC,EAC2BF,EAAfG,aADZ,IAAAD,EACoB,GADpBA,EAG9BC,EAAMxF,KAAKC,kBAAQ,SAAUwF,EAAIC,GAC/B,OAAOD,EAAGE,MAAM3P,YAAY4P,cAAcF,EAAGC,MAAM3P,gBAGrD,IAAI6P,EAAWP,EAAYF,EAAc,IACzC,OACEnP,EAAAC,EAAAC,cAAA,MAAIiL,IAAKpE,EAAO5G,UAAU,SACvBuN,GACC1N,EAAAC,EAAAC,cAAA,OAAKG,IAAKqN,EAAUvN,UAAU,OAAOG,IAAI,GAAGC,MAAO,GAAIC,OAAQ,KAEjER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACZH,EAAAC,EAAAC,cAAA,KAAG2P,cAAY,WAAWzP,KAAI,iBAAAc,OAAmB6F,GAAS3F,KAAK,SAC5D0O,gBAAc,QAAQC,gBAAA,gBAAA7O,OAA+B6F,IACrDsG,IAGLrN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWM,MAAO,CAAED,OAAQ,SACzCR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeiB,KAAK,cAAcX,MAAO,CAAEF,MAAK,GAAAW,OAAK0O,EAAL,MAAmBvO,gBAAc,KAC3FC,gBAAc,IAAIC,gBAAc,OAClCqO,EAAQI,QAAQ,GAFnB,KAEwBhQ,EAAAC,EAAAC,cAAA,YAAOmP,KAGjCrP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0BsK,GAAE,gBAAAvJ,OAAkB6F,IAC3D/G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACXoP,EAAMlF,IAAI,SAAC4F,EAAMlJ,GAChB,OACE/G,EAAAC,EAAAC,cAAA,MAAIiL,IAAKpE,GACP/G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACkL,EAAD,CAAWxL,KAAMqQ,EAAKP,QACtB1P,EAAAC,EAAAC,cAACmL,EAAD,CAAUzL,KAAMqQ,EAAKP,qBA1C7C1P,EAAAC,EAAAC,cAACoL,EAAA,SAAD,aAPW1K,aCsKJsP,cA5Jb,SAAAA,EAAYvQ,GAAO,IAAA6E,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/E,KAAAwQ,IACjB1L,EAAAC,OAAAE,EAAA,EAAAF,CAAA/E,KAAA+E,OAAAG,EAAA,EAAAH,CAAAyL,GAAArL,KAAAnF,KAAMC,KAEDuF,MAAQ,CACX2D,KAAM,GACN7B,YAAY,EACZrF,MAAO,MANQ6C,kNAWbqE,EAAO,cAGTnJ,KAAKwH,SAAS,CAAEvF,MAAO,KAAMqF,YAAY,IAEnCyD,EAAK/K,KAAKC,MAAMwQ,MAAM3D,OAAO/B,YAEf/K,KAAK0Q,uBAAnBrJ,gCAGJ8B,EAAO9B,EAAMyB,MAAM6H,KAAK,SAACxH,GACvB,OAAOA,EAAK4B,KAAOA,6BAGfrF,mBAAgByD,EAAKyH,mBAAUzH,EAAKxE,eAIvB,MAFX8C,EAAWC,EAAaD,YAG5B/B,EAAG,IAAAlE,OAAOiG,EAAP,KAAAjG,OAAmBkE,cAEDiC,MAAMjC,eAAvB7C,UAEQ+E,2BACZ5H,KAAKwH,SAAS,CACZvF,MAAK,wBAAAT,OAA0BkE,GAC/B4B,YAAY,gDAKHzE,EAASmF,eAAtBmB,mEAKJnJ,KAAKwH,SAAS,CAAEvF,MAAKwE,EAAAoK,GAAKvJ,YAAY,YAGxCtH,KAAKwH,SAAS,CAAE2B,KAAMA,EAAM7B,YAAY,EAAOrF,MAAO,+QAIlDyD,sBAIa,MAFX+B,EAAWC,EAAaD,YAG5B/B,EAAG,IAAAlE,OAAOiG,EAAP,KAAAjG,OAAmBkE,IAEpB7C,EAAW,uBAGI8E,MAAMjC,cAAvB7C,UAEc+E,gCACZ5H,eACe8B,EAAW+F,iBAAiBhF,oCAAzCZ,WACAqF,YAAY,QAFTE,2CAIE,+BAGI3E,EAASmF,kFAGtBhI,KAAKwH,SAAS,CACZvF,MAAK6F,EAAAC,GACLT,YAAY,qCAIT,mJAGA,IAAAhB,EACgDtG,KAAKwF,MADrDsL,EAAAxK,EACC6C,YADD,IAAA2H,EACQ,GADRA,EAAAC,EAAAzK,EACYgB,kBADZ,IAAAyJ,KAAAC,EAAA1K,EAC+BrE,aAD/B,IAAA+O,EACuC,KADvCA,EAAA5O,EAKH+G,GAAQ,GALL8H,EAAA7O,EAGL0I,oBAHK,IAAAmG,EAGU,GAHVA,EAAAC,EAAA9O,EAGc4I,cAHd,IAAAkG,EAGuB,GAHvBA,EAAAC,EAAA/O,EAG2BiH,eAH3B,IAAA8H,EAGqC,GAHrCA,EAGyCjG,EAHzC9I,EAGyC8I,MAAOxF,EAHhDtD,EAGgDsD,IAHhD0L,EAAAhP,EAGqDgJ,YAHrD,IAAAgG,EAG4D,GAH5DA,EAAAC,EAAAjP,EAGgE+I,aAHhE,IAAAkG,EAGwE,GAHxEA,EAAAC,EAAAlP,EAG4E6I,eAH5E,IAAAqG,EAGsF,GAHtFA,EAG0FjG,EAH1FjJ,EAG0FiJ,KAC/FC,EAJKlJ,EAILkJ,aAJKiG,EAAAnP,EAISmM,gBAJT,IAAAgD,EAIoB,GAJpBA,EAAAC,EAAApP,EAIwB+L,gBAJxB,IAAAqD,EAImC,GAJnCA,EAAAC,GAMuBxG,GAAW,IAAjCO,aACAlK,SAPD,IAAAmQ,EAMgB,GANhBA,IAO+B,IAA9BnQ,UAEFoQ,EAAe,IAAI7G,KAAKC,GAS9B,OAPGQ,IACGJ,IACFA,EAAQI,EAAaJ,OACnB7B,IACFA,EAAUiC,EAAajC,UAIzB/I,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACGtE,GACChH,EAAAC,EAAAC,cAACmM,EAAD,MAGFrM,EAAAC,EAAAC,cAACoM,EAAD,CAAY3K,MAAOA,EAAOE,UAAU,IAEpC7B,EAAAC,EAAAC,cAACkL,EAAD,CAAWxL,KAAM8K,IACjB1K,EAAAC,EAAAC,cAACmL,EAAD,CAAUzL,KAAM8K,IAEf1J,GAAaA,EAAUjB,aACtBC,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BACbH,EAAAC,EAAAC,cAACqL,EAAD,CAAevK,UAAWA,KAI9BhB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kCACdiR,EAAa9M,kBAGhBtE,EAAAC,EAAAC,cAAA,WAEC8K,GACChL,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aACXH,EAAAC,EAAAC,cAAA,KAAGE,KAAM4K,EAAa5F,KAAtB,wBACwB4F,EAAaN,OAAO3K,cAKhDC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOsL,wBAAyB,CAAEC,OAAQ3C,KAEzD/I,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmR,EAAD,CAAWzG,MAAOA,IAClB5K,EAAAC,EAAAC,cAACoR,EAAD,CAAUxG,KAAMA,IAChB9K,EAAAC,EAAAC,cAACqR,EAAD,CAAO1G,MAAOA,IACd7K,EAAAC,EAAAC,cAACsR,EAAD,CAAMzG,KAAMA,IAEZ/K,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGE,KAAMgF,GAAT,yBAEApF,EAAAC,EAAAC,cAACuR,EAAD,CAAaxD,SAAUA,IAEvBjO,EAAAC,EAAAC,cAACwR,EAAD,CAAa7D,SAAUA,YAtJZjN,aCKJ+Q,mLAhBX,OACE3R,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,mDAAR,eADF,sIAEiDJ,EAAAC,EAAAC,cAAA,KAAGE,KAAK,4BAAR,gBAFjD,8BAGkBJ,EAAAC,EAAAC,cAAA,KAAGE,KAAK,6CAAR,mBAElBJ,EAAAC,EAAAC,cAAA,+CACqCF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,gDAAR,oBADrC,aAVYQ,aC4DLgR,mLAhDX,IAAMzK,EAAWC,EAAaD,SAE9B,OACEnH,EAAAC,EAAAC,cAAC2R,EAAA,EAAD,CAAQ1K,SAAUA,GAChBnH,EAAAC,EAAAC,cAACoL,EAAA,SAAD,KACEtL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mDACVM,MAAO,CAAEqR,WAAY,SAAUC,cAAe,WACjD/R,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAMpH,GAAG,IAAIjE,UAAU,gBACrBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBM,MAAO,CAAEF,MAAO,QAAUD,IAAI,OAAOD,IAAK2R,MAD/E,oBAGAhS,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBgC,KAAK,SAAS0N,cAAY,WAAWoC,cAAY,kBAC5ElC,gBAAc,iBAAiBD,gBAAc,QAAQzN,aAAW,qBACtErC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BsK,GAAG,kBAC3CzK,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAMdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,kDAAkDD,UAAU,YAAWH,EAAAC,EAAAC,cAAA,KAC7EC,UAAU,kBADZ,uBAGFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACsL,EAAA,EAAD,CAAMpH,GAAG,SAASjE,UAAU,YAAWH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAApD,cAMRH,EAAAC,EAAAC,cAAA,QAAMkB,KAAK,OAAOjB,UAAU,mBAC1BH,EAAAC,EAAAC,cAACgS,EAAA,EAAD,KACElS,EAAAC,EAAAC,cAACiS,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,SAAUC,UAAWX,IACxC3R,EAAAC,EAAAC,cAACiS,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,IAAKC,UAAW/N,IACnCvE,EAAAC,EAAAC,cAACiS,EAAA,EAAD,CAAOE,KAAM,aAAcC,UAAWpC,eAxClCtP,aCDE2R,QACW,cAA7B/L,OAAOrB,SAASqN,UAEe,UAA7BhM,OAAOrB,SAASqN,UAEhBhM,OAAOrB,SAASqN,SAASrC,MACvB,2DCVNsC,IAASC,OAAO1S,EAAAC,EAAAC,cAACyS,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ac845ea4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5942d6fb.svg\";","import React from 'react';\n\nclass UserImage extends React.Component {\n  render() {\n    const { user = {} } = this.props;\n    const { profilePageUrl, avatarImageUrl, displayName } = user;\n\n    return (\n      <a className=\"mr-2\" href={profilePageUrl}>\n        <img src={avatarImageUrl} alt={displayName} width='36' height='36'\n             style={{ borderRadius: '50%' }}/>\n      </a>\n    );\n  }\n}\n\nexport default UserImage;\n","import React from 'react';\n\nclass UserName extends React.Component {\n  render() {\n    const { user = {} } = this.props;\n    const { profilePageUrl, displayName } = user;\n\n    return (\n      <a href={profilePageUrl} className=\"text-body mr-2\">{displayName}</a>\n    );\n  }\n}\n\nexport default UserName;\n","import React from 'react';\n\nclass CommunityName extends React.Component {\n  render() {\n    const { community = {} } = this.props;\n    const { resourceName, displayName } = community;\n\n    return (\n      <a href={`https://plus.google.com/${resourceName}`} className=\"text-secondary\">{displayName}</a>\n    );\n  }\n}\n\nexport default CommunityName;\n","import React from 'react';\n\nclass ProgressIndeterminate extends React.Component {\n  render() {\n    return (\n      <div className=\"progress\">\n        <div className=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\"\n             aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{ width: '100%' }}/>\n      </div>\n    );\n  }\n}\n\nexport default ProgressIndeterminate;","import React, { Component } from 'react';\n\nclass ErrorAlert extends Component {\n\n  static async getResponseError(response) {\n    if (!response)\n      return null;\n\n    let message = null;\n    let messages = null;\n\n    try {\n      const text = await response.text();\n      if (text) {\n        const body = JSON.parse(text);\n        if (body && body.message) {\n          message = body.message;\n        }\n\n        if (body && body.messages) {\n          messages = body.messages;\n        }\n      }\n    }\n    catch (e) {\n      // console.error(e);\n    }\n\n    let heading = null;\n\n    if (response.status === 422 && !message && messages) {\n      heading = `${response.status} ${response.statusText}`;\n      return {\n        response: response,\n        heading: heading,\n        message: null,\n        messages: messages,\n      };\n    }\n\n    if (response && response.status && response.statusText) {\n      heading = `${response.status} ${response.statusText}`;\n    }\n\n    if (!message) {\n      message = `${response.status} ${response.statusText}`;\n    }\n\n    if (heading === message)\n      heading = null;\n\n    return {\n      response: response,\n      heading: heading,\n      message: message,\n      messages: messages,\n    };\n  }\n\n  render() {\n    const { error = {}, canClose = true } = this.props;\n    const { heading, message } = error || {};\n\n    if (!heading && !message)\n      return null;\n\n    return (\n      <div className='alert alert-danger alert-dismissible fade show' role='alert'>\n        {heading ? (<h6 className=\"alert-heading\">{heading}</h6>) : null}\n        <p className=\"mb-0\">{message}</p>\n        {canClose && (\n          <button onClick={this.props.clearError} type=\"button\" className=\"close\" data-dismiss=\"alert\"\n                  aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ErrorAlert;","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass Pagination extends Component {\n\n  render() {\n    const { page, total, per_page, hrefBuilder, onPageChange } = this.props;\n\n    if (!total || total < 1)\n      return null;\n\n    let currentPage = page ? page : 1;\n\n    const previousPage = currentPage - 1;\n    const nextPage = currentPage + 1;\n    const lastPage = Math.ceil(total / per_page);\n\n    const firstItemNumber = (currentPage - 1) * per_page + 1;\n    const lastItemNumber = Math.min(currentPage * per_page, total);\n\n    const itemCount = lastItemNumber + 1 - firstItemNumber;\n\n    const itemPlurality = itemCount === 1 ? '' : 's';\n\n    if (lastPage === 1) {\n      return (\n        <nav aria-label=\"Page Navigation\">\n          <ul className=\"pagination\">\n            <li className=\"page-item disabled\">\n              <span\n                className=\"page-link\">{itemCount} item{itemPlurality}</span>\n            </li>\n          </ul>\n        </nav>\n      );\n    }\n\n    const firstPageItemClass = currentPage > 1 ? 'page-item' : 'page-item disabled';\n    const previousPageItemClass = currentPage > 1 ? 'page-item' : 'page-item disabled';\n    const nextPageItemClass = currentPage * per_page < total ? 'page-item' : 'page-item disabled';\n\n    return (\n      <nav aria-label=\"Page Navigation\">\n        <ul className=\"pagination\">\n          <li className={firstPageItemClass}>\n            <NavLink className=\"page-link\" to={hrefBuilder(1)}\n                     onClick={() => onPageChange(1)} title=\"First Page\">\n              <i title=\"First Page\" className=\"fas fa-step-backward\"/>\n            </NavLink>\n          </li>\n          <li className={previousPageItemClass}>\n            <NavLink className=\"page-link\" to={hrefBuilder(previousPage)}\n                     onClick={() => onPageChange(previousPage)} title=\"Previous Page\">\n              <i title=\"Prevous Page\" className=\"fas fa-chevron-left\"/>\n            </NavLink>\n          </li>\n          <li className=\"page-item disabled\">\n            <span className=\"page-link\">Page {currentPage} of {lastPage.toLocaleString()}</span>\n          </li>\n          <li className={nextPageItemClass}>\n            <NavLink className=\"page-link\" to={hrefBuilder(nextPage)}\n                     onClick={() => onPageChange(nextPage)} title=\"Next Page\">\n              <i title=\"Next Page\" className=\"fas fa-chevron-right\"/>\n            </NavLink>\n          </li>\n          <li className={nextPageItemClass}>\n            <NavLink className=\"page-link\" to={hrefBuilder(lastPage)}\n                     onClick={() => onPageChange(lastPage)} title=\"Last Page\">\n              <i title=\"Last Page\" className=\"fas fa-step-forward\"/>\n            </NavLink>\n          </li>\n        </ul>\n        <ul className=\"pagination\">\n          <li className=\"page-item disabled\">\n            <span className=\"page-link\">\n              Showing {itemCount} item{itemPlurality} ({firstItemNumber.toLocaleString()} - {lastItemNumber.toLocaleString()} of {total.toLocaleString()} total)\n            </span>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Pagination;\n","import React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { firstBy } from 'thenby';\n\nimport UserImage from './UserImage';\nimport UserName from './UserName';\nimport CommunityName from './CommunityName';\nimport ProgressIndeterminate from './ProgressIndeterminate';\nimport ErrorAlert from './ErrorAlert';\nimport settingsJson from '../settings.json';\nimport Pagination from './Pagination';\n\nclass PostList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      index: null,\n      search: '',\n      isFetching: false,\n      error: null,\n      per_page: 10,\n      page: 1,\n    };\n\n    this.isUpdating = false;\n  }\n\n  async componentDidMount() {\n    this.setState({ error: null, isFetching: true });\n\n    let url = `/posts/index.json`;\n\n    const basename = settingsJson.basename;\n\n    if (basename !== '')\n      url = `/${basename}/${url}`;\n\n    let response = null;\n\n    try {\n      response = await fetch(url);\n\n      if (!response.ok) {\n        this.setState({\n          error: await ErrorAlert.getResponseError(response),\n          isFetching: false,\n        });\n        return;\n      }\n\n    }\n    catch (e) {\n      this.setState({\n        error: e,\n        isFetching: false,\n      });\n      return;\n    }\n\n    const index = await response.json();\n\n    const { location } = this.props;\n\n    const query = new URLSearchParams(location.search);\n    const search = query.get('search');\n    const page = parseInt(query.get('page'), 10);\n\n    this.setState({ index: index, search: search || '', page: page, isFetching: false, error: null });\n\n    this.performSearch(search, page);\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.isUpdating)\n      return;\n\n    // console.log('componentDidUpdate');\n\n    this.isUpdating = true;\n\n    try {\n      const { location: prevLocation, isFetching: prevIsFetching } = prevProps;\n      const prevQuery = new URLSearchParams(prevLocation.search);\n      const prevSearch = prevQuery.get('search');\n      let prevPage = prevQuery.get('page');\n      prevPage = prevPage ? parseInt(prevPage, 10) : null;\n\n      const { location, isFetching } = this.props;\n      const query = new URLSearchParams(location.search);\n      const search = query.get('search');\n      let page = query.get('page');\n      page = page ? parseInt(page, 10) : null;\n\n      // copy any changed props to state\n      if (isFetching !== prevIsFetching) {\n        this.setState({ isFetching: isFetching });\n      }\n\n      if (search !== prevSearch || page !== prevPage || prevQuery.toString() !== query.toString()) {\n        this.performSearch(search, page);\n      }\n    }\n    finally {\n      this.isUpdating = false;\n    }\n  }\n\n  performSearch(search, page) {\n    const { index = {} } = this.state;\n    const { posts = [] } = index || {};\n\n    // console.log(`performSearch, search: ${search}, page: ${page}`);\n\n    let searchLower = search && search.toLowerCase();\n\n    // console.log('starting search');\n\n    let matchingPostCount = 0;\n\n    posts.forEach((post) => {\n      post.hidden = search && (!post.content || !post.content.toLowerCase().includes(searchLower));\n      // console.log(`title: ${post.title}, hidden: ${post.hidden}`);\n      if (!post.hidden)\n        matchingPostCount++;\n    });\n\n    // console.log('finished search');\n\n    this.setState({\n      index: index,\n      search: search || '',\n      page: page,\n      matchingPostCount: matchingPostCount,\n      isFetching: false,\n      error: null\n    });\n  }\n\n  static getQueryString(params) {\n    let strings = Object.keys(params)\n      .filter(key => {\n        return key && params[key] && params[key] !== '';\n      })\n      .map(key => {\n        let value = params[key];\n        if (!value || value === '')\n          return null;\n        return [key, params[key]].map(encodeURIComponent).join('=');\n      });\n\n    let string = '';\n\n    if (strings && strings.length > 0)\n      string = '?' + strings.join('&');\n\n    return string;\n  }\n\n  static getPagedSearchQueryString(search, page) {\n    if (page < 2) page = null;\n\n    return PostList.getQueryString(\n      {\n        search: search,\n        page: page\n      });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { search } = this.state;\n\n    const { location } = this.props;\n\n    const url = '/' + PostList.getPagedSearchQueryString(search);\n\n    if (url !== location.pathname + location.search) {\n      // push the search onto the stack, so we can navigate back to it\n      this.props.history.push(url);\n    } else {\n      this.performSearch(search);\n    }\n  };\n\n  handlePageChange = async (pageData) => {\n    const { search, page } = this.state;\n\n    const newPage = pageData.selected + 1;\n\n    if (page === newPage)\n      return;\n\n    const url = '/' + PostList.getPagedSearchQueryString(search, newPage);\n\n    // push the search onto the stack, so we can navigate back to it\n    this.props.history.push(url);\n\n    window.scrollTo(0, 0);\n  };\n\n  static renderMediaPreview(media, postUrl) {\n    const { url = '' } = media;\n\n    if (!url)\n      return null;\n\n    if (url.startsWith(\"http://www.youtube.com/watch?v\\u003d\")) {\n      const mediaId = url.substring(31, 43);\n      return (\n        <Fragment>\n          <a href={postUrl}>\n            <img src={`https://img.youtube.com/vi/${mediaId}/0.jpg`} alt={media.description} height='360'/>\n          </a>\n          <br/>\n          <a href={postUrl} className=\"mb-3\">\n            <i className=\"far fa-play-circle\"/> YouTube\n          </a>\n        </Fragment>\n      );\n    } else if (url.startsWith(\"https://www.youtube.com/watch?v\\u003d\")) {\n      const mediaId = url.substring(32, 43);\n      return (\n        <Fragment>\n          <a href={postUrl}>\n            <img src={`https://img.youtube.com/vi/${mediaId}/0.jpg`} alt={media.description} height='360'/>\n          </a>\n          <br/>\n          <a href={postUrl} className=\"mb-3\">\n            <i className=\"far fa-play-circle\"/> YouTube\n          </a>\n        </Fragment>\n      );\n    } else if (url.startsWith(\"https://plus.google.com\")) {\n      return (\n        <Fragment>\n          <a href={postUrl} className=\"mb-3\">\n            <i className=\"far fa-play-circle\"/> View Media\n          </a>\n        </Fragment>\n      );\n    } else if (media.contentType === \"video/*\" && url != null) {\n      return (\n        <Fragment>\n          <a href={postUrl} className=\"mb-3\">\n            <i className=\"far fa-play-circle\"/> View Media\n          </a>\n        </Fragment>\n      );\n    } else if (media.contentType === \"image/*\" && url != null) {\n      return (\n        <Fragment>\n          <a href={postUrl}>\n            <img src={url} alt={media.description} height='360'/>\n          </a>\n        </Fragment>\n      );\n    }\n\n    return null;\n  }\n\n  static renderAlbumPreview(album, postUrl) {\n    if (!album)\n      return null;\n\n    const { media } = album;\n\n    if (!media)\n      return null;\n\n    const mediaItems = media.map((item) => {\n      if (item.contentType === \"image/*\" && item.url) {\n        return (\n          <Fragment>\n            <a href={postUrl}><img src={item.url} height='120' alt='media'/></a>\n          </Fragment>\n        );\n      }\n      else if (item.contentType === \"video/*\" && item.url) {\n        return (\n          <Fragment>\n            <a href={postUrl}>\n              <i className=\"far fa-play-circle\"/> Media\n            </a>\n          </Fragment>\n        );\n      }\n\n      return null;\n    });\n\n    return (\n      <Fragment>\n        {mediaItems[0]}\n        {mediaItems.length > 1 && (\n          <Fragment>\n            <br/>\n            <a href={postUrl}>View {mediaItems.length - 1} more item{mediaItems.length > 2 ? 's' : ''}</a>\n          </Fragment>\n        )}\n      </Fragment>\n    );\n  }\n\n  static renderLinkPreview(link, postUrl) {\n    let linkItem = null;\n    if (link.title) {\n      linkItem = (\n        <Fragment>\n          <a href={link.url}>{link.title}</a>\n          {link.imageUrl && (\n            <Fragment>\n              <br/>\n              <a href={postUrl}>\n                <img src={link.imageUrl} alt={link.title} height='120'/>\n              </a>\n            </Fragment>\n          )}\n        </Fragment>\n      );\n    }\n    return linkItem;\n  }\n\n  buildPageHref = (page) => {\n    const { search } = this.state;\n\n    return '/' + PostList.getPagedSearchQueryString(search, page);\n  };\n\n  renderPagination() {\n    const { index = {}, page, matchingPostCount } = this.state;\n    const { posts = [] } = index || {};\n    const { length = 0 } = posts || [];\n\n    if (length < 1) return null;\n\n    return (\n      <Pagination page={page} total={matchingPostCount} per_page={10}\n                  hrefBuilder={this.buildPageHref}\n                  onPageChange={(page) => this.handlePageChange(page)}/>\n    );\n  }\n\n  render() {\n    const { index = {}, search = '', isFetching, error, page = 1, per_page = 10 } = this.state;\n    const { posts = [] } = index || {};\n\n    posts.sort(firstBy('creationTime', -1));\n\n    let renderedPostCount = 0;\n    let skippedPostCount = 0;\n    let postsToSkip = (page - 1) * per_page;\n\n    // console.log(`postsToSkip: ${postsToSkip}`);\n\n    let postItems = posts.map((post) => {\n      if (post.hidden)\n        return null;\n\n      if (renderedPostCount >= per_page)\n        return null;\n\n      if (skippedPostCount < postsToSkip) {\n        skippedPostCount++;\n        return null;\n      }\n\n      renderedPostCount++;\n\n      const createdAt = new Date(post.creationTime);\n      const url = `/posts/${post.id}`;\n\n      const { author, postAcl, media, album, link, poll, resharedPost } = post;\n\n      const { communityAcl = {} } = postAcl || {};\n      const { community } = communityAcl || {};\n\n      let title = post.title;\n\n      if (resharedPost) {\n        if (!post.media) {\n          post.media = resharedPost.media;\n        }\n      }\n\n      if (post.content) {\n        title = post.content;\n        // if (title.length > 100)\n        //   title = title.substring(0, 100) + '...';\n      }\n\n      return (\n        <div key={url} className=\"card mb-2\">\n          <div className=\"card-body\">\n            <h6 className=\"card-title\">\n              <UserImage user={author}/>\n              <UserName user={author}/>\n              {community && community.displayName && (\n                <Fragment>\n                  <i className=\"fas fa-caret-right mr-1\"/>\n                  <CommunityName community={community}/>\n                </Fragment>\n              )}\n              <small className=\"text-muted ml-5 text-secondary\">\n                <Link to={url} className=\"text-secondary\">{createdAt.toLocaleString()}</Link>\n              </small>\n            </h6>\n            {resharedPost && (\n              <p className=\"card-text\">\n                <Link to={url}>\n                  Originally shared by {resharedPost.author.displayName}\n                </Link>\n              </p>\n            )}\n            <p className=\"card-text\">\n              <Link to={url} className=\"text-body\" dangerouslySetInnerHTML={{ __html: title }}\n                    style={{ textDecoration: 'none' }}/>\n            </p>\n            {media && PostList.renderMediaPreview(media, url)}\n            {album && PostList.renderAlbumPreview(album, url)}\n            {link && PostList.renderLinkPreview(link, url)}\n            {poll && (\n              <p className=\"card-text\">\n                <Link to={url}>View Poll</Link>\n              </p>\n            )}\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <Fragment>\n        <form className=\"form-inline mb-1\" onSubmit={this.handleSubmit}>\n          <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"\n                 value={search}\n                 onChange={(e) => this.setState({ search: e.target.value })}/>\n          <button className=\"btn btn-primary my-2 my-sm-0\" type=\"submit\">Search</button>\n        </form>\n\n        {isFetching && (\n          <ProgressIndeterminate/>\n        )}\n\n        <ErrorAlert error={error} canClose={false}/>\n\n        {postItems}\n\n        {this.renderPagination()}\n\n      </Fragment>\n    )\n  }\n}\n\nexport default withRouter(PostList);\n","import React, { Component, Fragment } from 'react';\nimport UserImage from './UserImage';\nimport UserName from './UserName';\n\n\nclass PlusOneList extends Component {\n  render() {\n    const { plusOnes } = this.props;\n\n    if (!plusOnes || plusOnes.length < 1)\n      return (\n        <Fragment/>\n      );\n\n    return (\n      <Fragment>\n        <br/><br/>\n        <h5>Likes</h5>\n        <ul className=\"list-unstyled\">\n          {plusOnes.map((plusOne, index) => {\n            const { plusOner } = plusOne;\n\n            return (\n              <li key={index}>\n                <div className=\"mt-0 mb-2\">\n                  <UserImage user={plusOner}/>\n                  <UserName user={plusOner} />\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </Fragment>\n    );\n  }\n}\n\nexport default PlusOneList;\n","import React, { Component, Fragment } from 'react';\nimport { withRouter } from 'react-router';\nimport UserImage from './UserImage';\nimport UserName from './UserName';\n\n\nclass CommentList extends Component {\n  render() {\n    const { comments } = this.props;\n\n    if (!comments || comments.length < 1)\n      return (\n        <Fragment/>\n      );\n\n    const hash = this.props.location.hash;\n\n    return (\n      <Fragment>\n        <hr/>\n        <h6 className=\"mt-3\">Comments</h6>\n        <hr/>\n        <ul className=\"list-unstyled\">\n          {comments.map((comment, index) => {\n            const { author, creationTime, content, media, link } = comment;\n            const created = new Date(creationTime);\n\n            let mediaItem = null;\n            if (media && media.url && media.contentType === 'image/*') {\n              mediaItem = (\n                <a href={media.url}>\n                  <img src={media.url} alt='' height='205'/>\n                </a>\n              );\n            }\n\n            let linkItem = null;\n            if (link && link.url) {\n              if (link.imageUrl) {\n                linkItem = (\n                  <a href={link.url}>\n                    <img src={link.imageUrl} alt={link.title} height='72' className=\"mr-1\"/>\n                    {link.title}\n                  </a>\n                );\n              }\n              else if (link.title) {\n                linkItem = (\n                  <a href={link.url}>{link.title}</a>\n                );\n              }\n            }\n\n            const id = `comment-${index}`;\n\n            let className = 'media mb-2 p-1';\n            let border = null;\n\n            const isSelected = hash === '#' + id;\n\n            if (isSelected) {\n              className += ' bg-light';\n              border = '1px solid';\n            }\n\n            return (\n              <li key={index} id={id} className={className} style={{ border: border, borderRadius: '18px' }}>\n                <UserImage user={author}/>\n                <div className=\"media-body\">\n                  <h6 className=\"mt-0 mb-1\">\n                    <UserName user={author}/>\n                    <small className=\"text-muted ml-5 text-secondary\">\n                      <a href={`#${id}`} className=\"text-secondary\">{created.toLocaleString()}</a>\n                    </small>\n                    {isSelected && (\n                      <i className=\"fas fa-star ml-3\"/>\n                    )}\n                  </h6>\n                  {comment.content && (\n                    <div dangerouslySetInnerHTML={{ __html: content }}/>\n                  )}\n                  {mediaItem}\n                  {linkItem}\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(CommentList);\n","import React, { Component, Fragment } from 'react';\n\n\nclass MediaList extends Component {\n  render() {\n    const { media } = this.props;\n\n    if (!media)\n      return (\n        <Fragment/>\n      );\n\n    const { url } = media;\n\n    if (!url)\n      return (\n        <Fragment/>\n      );\n\n    if (url.startsWith(\"http://www.youtube.com/watch?v\\u003d\")) {\n      const mediaId = url.substring(31, 43);\n      return (\n        <Fragment>\n          <iframe width='480' height='360' title={media.description} src={`http://www.youtube.com/embed/${mediaId}`}\n                  frameBorder='0' allow=\"autoplay; encrypted-media\" allowFullScreen={true}/>\n          <br />\n          <a href={url} className=\"mb-3\">\n            <i className=\"far fa-play-circle\"/> Media\n          </a>\n        </Fragment>\n      );\n    } else if (url.startsWith(\"https://www.youtube.com/watch?v\\u003d\")) {\n      const mediaId = url.substring(32, 43);\n      return (\n        <Fragment>\n          <iframe width='480' height='360' title={media.description} src={`https://www.youtube.com/embed/${mediaId}`}\n                  frameBorder='0' allow=\"autoplay; encrypted-media\" allowFullScreen={true}/>\n          <a href={url} className=\"mb-3\">\n            <i className=\"far fa-play-circle\"/> Media\n          </a>\n        </Fragment>\n      );\n    } else if (media.contentType === \"video/*\" && url != null) {\n      return (\n        <Fragment>\n          <br/>\n          <a href={url} className=\"mb-3\">\n            <i className=\"far fa-play-circle\"/> Media\n          </a>\n        </Fragment>\n      );\n    } else if (media.contentType === \"image/*\" && url != null) {\n      return (\n        <a href={url}>\n          <img src={url} alt={media.description} height='360'/>\n        </a>\n      );\n    }\n\n    return (\n      <Fragment/>\n    );\n  }\n}\n\nexport default MediaList;\n","import React, { Component, Fragment } from 'react';\n\n\nclass Album extends Component {\n  render() {\n    const { album = {} } = this.props;\n    const { media } = album;\n\n    if (!media)\n      return (\n        <Fragment/>\n      );\n\n    return media.map((item) => {\n      if (item.contentType === \"image/*\" && item.url) {\n        return (\n          <div key={item.url} className=\"my-2\">\n            <a href={item.url}><img src={item.url} height='360' alt='media'/></a>\n          </div>\n        );\n      }\n      else if (item.contentType === \"video/*\" && item.url) {\n        return (\n          <div key={item.url} className=\"my-3\">\n            <a href={item.url}>\n              <i className=\"far fa-play-circle\"/> Media\n            </a>\n          </div>\n        );\n      }\n\n      return null;\n    });\n  }\n}\n\nexport default Album;\n","import React, { Component, Fragment } from 'react';\n\n\nclass LinkItem extends Component {\n  render() {\n    const { link } = this.props;\n\n    if (!link || !link.url)\n      return (\n        <Fragment/>\n      );\n\n    return (\n      <Fragment>\n        <hr/>\n        <h4>\n          <a href={link.url}>{link.title}</a>\n        </h4>\n        {link.imageUrl && (\n          <a href={link.url}>\n            <img src={link.imageUrl} alt={link.title} height='360'/>\n          </a>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nexport default LinkItem;\n","import React, { Component, Fragment } from 'react';\nimport UserImage from './UserImage';\nimport UserName from './UserName';\nimport { firstBy } from \"thenby\";\n\n\nclass Poll extends Component {\n  render() {\n    const { poll = {} } = this.props;\n    const { choices, totalVotes = 0 } = poll || {};\n\n    if (!choices)\n      return (\n        <Fragment/>\n      );\n\n    return (\n      <Fragment>\n        <div className=\"mb-2\">{totalVotes.toLocaleString()} votes <span className=\"text-secondary\"> - votes visible to Public</span>\n        </div>\n        <ul className=\"list-unstyled mt-1\">\n          {choices.map((choice, index) => {\n            const { voteCount, imageUrl, description, votes = [] } = choice;\n\n            votes.sort(firstBy(function (v1, v2) {\n              return v1.voter.displayName.localeCompare(v2.voter.displayName);\n            }));\n\n            let percent = (voteCount / totalVotes) * 100;\n            return (\n              <li key={index} className=\"media\">\n                {imageUrl && (\n                  <img src={imageUrl} className=\"mr-3\" alt=\"\" width={94} height={94}/>\n                )}\n                <div className=\"media-body\">\n                  <h5 className=\"mt-0 mb-1\">\n                    <a data-toggle=\"collapse\" href={`#choiceDetails${index}`} role=\"button\"\n                       aria-expanded=\"false\" aria-controls={`choiceDetails${index}`}>\n                      {description}\n                    </a>\n                  </h5>\n                  <div className=\"progress\" style={{ height: '40px' }}>\n                    <div className=\"progress-bar\" role=\"progressbar\" style={{ width: `${percent}%` }} aria-valuenow=\"25\"\n                         aria-valuemin=\"0\" aria-valuemax=\"100\">\n                      {percent.toFixed(0)}% <span>{voteCount}</span>\n                    </div>\n                  </div>\n                  <div className=\"collapse multi-collapse\" id={`choiceDetails${index}`}>\n                    <div className=\"card card-body\">\n                      <ul className=\"list-unstyled mt-1\">\n                        {votes.map((vote, index) => {\n                          return (\n                            <li key={index}>\n                              <div className=\"mt-0 mb-2\">\n                                <UserImage user={vote.voter}/>\n                                <UserName user={vote.voter}/>\n                              </div>\n                            </li>\n                          )\n                        })}\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </Fragment>\n    )\n  }\n}\n\nexport default Poll;\n","import React, { Component, Fragment } from 'react';\nimport ProgressIndeterminate from './ProgressIndeterminate';\nimport ErrorAlert from './ErrorAlert';\n\nimport settingsJson from '../settings.json';\nimport PlusOneList from './PlusOneList';\nimport CommentList from './CommentList';\nimport UserImage from './UserImage';\nimport UserName from './UserName';\nimport CommunityName from './CommunityName';\nimport MediaList from './MediaList';\nimport Album from './Album';\nimport LinkItem from './LinkItem';\nimport Poll from './Poll';\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      post: {},\n      isFetching: false,\n      error: null,\n    };\n  }\n\n  async componentDidMount() {\n    let post = null;\n\n    try {\n      this.setState({ error: null, isFetching: true });\n\n      const id = this.props.match.params.id;\n\n      const index = await this.getIndex();\n\n      if(index) {\n        post = index.posts.find((post) => {\n          return post.id === id;\n        });\n        if(post) {\n          let url = `/posts/${post.date} - ${post.title}.json`;\n\n          const basename = settingsJson.basename;\n\n          if (basename !== '')\n            url = `/${basename}/${url}`;\n\n          const response = await fetch(url);\n\n          if (!response.ok) {\n            this.setState({\n              error: `Cannot fetch post at ${url}`,\n              isFetching: false,\n            });\n            return;\n          }\n\n          post = await response.json();\n        }\n      }\n    }\n    catch (e) {\n      this.setState({ error: e, isFetching: false });\n    }\n\n    this.setState({ post: post, isFetching: false, error: null });\n  }\n\n  async getIndex() {\n    let url = `/posts/index.json`;\n\n    const basename = settingsJson.basename;\n\n    if (basename !== '')\n      url = `/${basename}/${url}`;\n\n    let response = null;\n\n    try {\n      response = await fetch(url);\n\n      if (!response.ok) {\n        this.setState({\n          error: await ErrorAlert.getResponseError(response),\n          isFetching: false,\n        });\n        return null;\n      }\n\n      return await response.json();\n    }\n    catch (e) {\n      this.setState({\n        error: e,\n        isFetching: false,\n      });\n    }\n\n    return null;\n  }\n\n  render() {\n    const { post = {}, isFetching = true, error = null } = this.state;\n    let {\n      creationTime = '', author = {}, content = '', media, url, link = {}, album = {}, postAcl = {}, poll,\n      resharedPost, comments = [], plusOnes = []\n    } = post || {};\n    const { communityAcl = {} } = postAcl || {};\n    const { community } = communityAcl || {};\n\n    const creationDate = new Date(creationTime);\n\n    if(resharedPost) {\n      if(!media)\n        media = resharedPost.media;\n      if(!content)\n        content = resharedPost.content;\n    }\n\n    return (\n      <Fragment>\n        {isFetching && (\n          <ProgressIndeterminate/>\n        )}\n\n        <ErrorAlert error={error} canClose={false}/>\n\n        <UserImage user={author}/>\n        <UserName user={author}/>\n\n        {community && community.displayName && (\n          <Fragment>\n            <i className=\"fas fa-caret-right mr-1\"/>\n            <CommunityName community={community}/>\n          </Fragment>\n        )}\n\n        <small className=\"text-muted ml-5 text-secondary\">\n          {creationDate.toLocaleString()}\n        </small>\n\n        <hr />\n\n        {resharedPost && (\n          <p className=\"card-text\">\n            <a href={resharedPost.url}>\n              Originally shared by {resharedPost.author.displayName}\n            </a>\n          </p>\n        )}\n\n        <div className=\"mt-3\" dangerouslySetInnerHTML={{ __html: content }}/>\n\n        <br/>\n        <MediaList media={media}/>\n        <LinkItem link={link}/>\n        <Album album={album}/>\n        <Poll poll={poll}/>\n\n        <br/>\n        <a href={url}>View Original G+ Post</a>\n\n        <CommentList comments={comments}/>\n\n        <PlusOneList plusOnes={plusOnes}/>\n\n      </Fragment>\n    );\n  }\n}\n\nexport default Post;\n","import React, { Component, Fragment } from 'react';\n\nclass About extends Component {\n  render() {\n    return (\n      <Fragment>\n        <h3>About</h3>\n        <p>\n          <a href=\"https://github.com/evilgeniuslabs/gplus-archive\">G+ Archiver</a> is a project for generating a completely client-side archive of exported G+ posts.\n          The archive can be hosted publicly for free on <a href=\"https://pages.github.com\">GitHub Pages</a> using the\n          instructions at <a href=\"https://github.com/gitname/react-gh-pages\">react-gh-pages</a>\n        </p>\n        <p>\n          This project was bootstrapped with <a href=\"https://github.com/facebook/create-react-app\">Create React App</a>.\n        </p>\n      </Fragment>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport { Route, Switch } from 'react-router';\nimport logo from './logo.svg';\nimport './App.css';\nimport PostList from './Components/PostList';\nimport Post from './Components/Post';\nimport About from './Components/About';\n\nimport settingsJson from './settings.json';\n\nclass App extends Component {\n\n  render() {\n    const basename = settingsJson.basename;\n\n    return (\n      <Router basename={basename}>\n        <Fragment>\n          <nav className=\"navbar navbar-expand-md navbar-dark bg-dark mb-2\"\n               style={{ paddingTop: '.25rem', paddingBottom: '.25rem' }}>\n            <Link to=\"/\" className=\"navbar-brand\">\n              <img className=\"navbar-brand-logo\" style={{ width: '32px' }} alt=\"Logo\" src={logo}/> G+ Post Archive\n            </Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\"\n                    aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span className=\"navbar-toggler-icon\"/>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n              <ul className=\"navbar-nav mr-auto\">\n                {/*<li className=\"nav-item\">*/}\n                {/*<Link className=\"nav-link\" href=\"/posts\"><i className=\"far fa-file\"/> Posts</Link>*/}\n                {/*</li>*/}\n              </ul>\n\n              <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                  <a href=\"https://github.com/evilgeniuslabs/gplus-archive\" className=\"nav-link\"><i\n                    className=\"fab fa-github\"/> Fork me on GitHub</a>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-info-circle\"/> About</Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n\n          <main role=\"main\" className=\"container-fluid\">\n            <Switch>\n              <Route exact path={\"/about\"} component={About}/>\n              <Route exact path={\"/\"} component={PostList}/>\n              <Route path={\"/posts/:id\"} component={Post}/>\n            </Switch>\n\n          </main>\n\n        </Fragment>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}